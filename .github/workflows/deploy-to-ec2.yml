name: Build and Deploy

on:
  push:
    branches: ["release"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: 현재 실행 환경에 JDK 17 설치하기
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: 현재 실행 환경에 Repository 불러오기
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true

      - name: App을 Gradle로 빌드하기
        run: |
          git submodule update --init --recursive
          chmod +x gradlew
          ./gradlew clean build

      - name: Docker Buildx 설치하기
        uses: docker/setup-buildx-action@v3

      - name: GitHub Container Registry에 로그인 하기
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Docker image로 build 후 GHCR에 push하기
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/flytraphub/venus-planner-be:release

      - name: AWS 자격 증명 설정하기
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCOUNT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCOUNT_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: 현재 실행 환경의 Public IP 주소 얻기
        id: public-ip
        run: |
          response=$(curl -s canhazip.com)
          echo "ip=$response" >> "$GITHUB_OUTPUT"

      - name: AWS 보안 그룹에 Github Actions IP 추가
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.public-ip.outputs.ip }}/32

      - name: 원격 서버에 SSH로 접속 후 명령어 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST_ADDRESS }}
          username: ec2-user
          key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
          script: |
            cd venus-planner-be/
            chmod +x ./run.sh
            ./run.sh

      - name: AWS 보안 그룹에서 Github Actions IP 제거
        run: |
          aws ec2 revoke-security-group-ingress  --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.public-ip.outputs.ip }}/32
